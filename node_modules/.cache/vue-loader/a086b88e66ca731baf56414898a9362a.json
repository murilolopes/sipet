{"remainingRequest":"/home/murilo/code/murilo/sipet/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/murilo/code/murilo/sipet/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/murilo/code/murilo/sipet/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/murilo/code/murilo/sipet/src/router/views/pages/apps/calendar.vue?vue&type=template&id=1ec2cc22&","dependencies":[{"path":"/home/murilo/code/murilo/sipet/src/router/views/pages/apps/calendar.vue","mtime":1573758530000},{"path":"/home/murilo/code/murilo/sipet/node_modules/cache-loader/dist/cjs.js","mtime":1583949852443},{"path":"/home/murilo/code/murilo/sipet/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1583949852838},{"path":"/home/murilo/code/murilo/sipet/node_modules/cache-loader/dist/cjs.js","mtime":1583949852443},{"path":"/home/murilo/code/murilo/sipet/node_modules/vue-loader/lib/index.js","mtime":1583949852838}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"Layout\",\n    [\n      _c(\"PageHeader\", { attrs: { title: _vm.title, items: _vm.items } }),\n      _c(\"div\", { staticClass: \"row\" }, [\n        _c(\"div\", { staticClass: \"col-12\" }, [\n          _c(\"div\", { staticClass: \"card\" }, [\n            _c(\"div\", { staticClass: \"card-body\" }, [\n              _c(\"div\", { staticClass: \"row align-items-center\" }, [\n                _c(\"div\", { staticClass: \"col-xl-2 col-lg-3 col-6\" }, [\n                  _c(\"img\", {\n                    staticClass: \"mr-4 align-self-center img-fluid\",\n                    attrs: {\n                      src: require(\"@assets/images/cal.png\"),\n                      alt: \"cal\"\n                    }\n                  })\n                ]),\n                _c(\"div\", { staticClass: \"col-xl-10 col-lg-9\" }, [\n                  _c(\"div\", { staticClass: \"mt-4 mt-lg-0\" }, [\n                    _c(\"h5\", { staticClass: \"mt-0 mb-1 font-weight-bold\" }, [\n                      _vm._v(\"Welcome to Your Calendar\")\n                    ]),\n                    _c(\"p\", { staticClass: \"text-muted mb-2\" }, [\n                      _vm._v(\n                        '\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tThe calendar shows the events synced from all your linked\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tcalendars. Click on event to see or edit the details. You\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tcan create new event by clicking on \"Create New event\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tbutton or any cell available in calendar below.\\n\\t\\t\\t\\t\\t\\t\\t\\t'\n                      )\n                    ]),\n                    _c(\n                      \"button\",\n                      {\n                        staticClass: \"btn btn-primary mt-2 mr-1\",\n                        attrs: { id: \"btn-new-event\" },\n                        on: {\n                          click: function($event) {\n                            _vm.showmodal = true\n                          }\n                        }\n                      },\n                      [\n                        _c(\"i\", { staticClass: \"uil-plus-circle\" }),\n                        _vm._v(\" Create New Event\\n\\t\\t\\t\\t\\t\\t\\t\\t\")\n                      ]\n                    ),\n                    _c(\"button\", { staticClass: \"btn btn-white mt-2\" }, [\n                      _c(\"i\", { staticClass: \"uil-sync\" }),\n                      _vm._v(\" Link Calendars\\n\\t\\t\\t\\t\\t\\t\\t\\t\")\n                    ])\n                  ])\n                ])\n              ])\n            ])\n          ])\n        ])\n      ]),\n      _c(\"div\", { staticClass: \"row\" }, [\n        _c(\"div\", { staticClass: \"col-12\" }, [\n          _c(\"div\", { staticClass: \"card\" }, [\n            _c(\"div\", { staticClass: \"card-body\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"app-calendar\" },\n                [\n                  _c(\"FullCalendar\", {\n                    ref: \"fullCalendar\",\n                    attrs: {\n                      \"default-view\": \"dayGridMonth\",\n                      header: {\n                        left: \"prev,next today\",\n                        center: \"title\",\n                        right: \"dayGridMonth,timeGridWeek,timeGridDay,listWeek\"\n                      },\n                      \"button-text\": {\n                        today: \"Today\",\n                        month: \"Month\",\n                        week: \"Week\",\n                        day: \"Day\",\n                        list: \"List\",\n                        prev: \"Prev\",\n                        next: \"Next\"\n                      },\n                      \"bootstrap-font-awesome\": false,\n                      editable: true,\n                      droppable: true,\n                      plugins: _vm.calendarPlugins,\n                      events: _vm.calendarEvents,\n                      weekends: _vm.calendarWeekends,\n                      \"theme-system\": _vm.themeSystem\n                    },\n                    on: {\n                      dateClick: _vm.dateClicked,\n                      eventClick: _vm.editEvent\n                    }\n                  })\n                ],\n                1\n              )\n            ])\n          ])\n        ])\n      ]),\n      _c(\n        \"b-modal\",\n        {\n          attrs: {\n            title: \"Add New Event\",\n            \"title-class\": \"text-black font-18\",\n            \"hide-footer\": \"\"\n          },\n          model: {\n            value: _vm.showmodal,\n            callback: function($$v) {\n              _vm.showmodal = $$v\n            },\n            expression: \"showmodal\"\n          }\n        },\n        [\n          _c(\n            \"form\",\n            {\n              on: {\n                submit: function($event) {\n                  $event.preventDefault()\n                  return _vm.handleSubmit($event)\n                }\n              }\n            },\n            [\n              _c(\"div\", { staticClass: \"row\" }, [\n                _c(\"div\", { staticClass: \"col-12\" }, [\n                  _c(\"div\", { staticClass: \"form-group\" }, [\n                    _c(\"label\", { attrs: { for: \"name\" } }, [\n                      _vm._v(\"Event Name\")\n                    ]),\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.event.title,\n                          expression: \"event.title\"\n                        }\n                      ],\n                      staticClass: \"form-control\",\n                      class: {\n                        \"is-invalid\": _vm.submitted && _vm.$v.event.title.$error\n                      },\n                      attrs: {\n                        id: \"name\",\n                        type: \"text\",\n                        placeholder: \"Enter name\"\n                      },\n                      domProps: { value: _vm.event.title },\n                      on: {\n                        input: function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.$set(_vm.event, \"title\", $event.target.value)\n                        }\n                      }\n                    }),\n                    _vm.submitted && !_vm.$v.event.title.required\n                      ? _c(\"div\", { staticClass: \"invalid-feedback\" }, [\n                          _vm._v(\"This value is required.\")\n                        ])\n                      : _vm._e()\n                  ])\n                ]),\n                _c(\"div\", { staticClass: \"col-12\" }, [\n                  _c(\"div\", { staticClass: \"form-group\" }, [\n                    _c(\"label\", { staticClass: \"control-label\" }, [\n                      _vm._v(\"Category\")\n                    ]),\n                    _c(\n                      \"select\",\n                      {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.event.category,\n                            expression: \"event.category\"\n                          }\n                        ],\n                        staticClass: \"form-control\",\n                        class: {\n                          \"is-invalid\":\n                            _vm.submitted && _vm.$v.event.category.errors\n                        },\n                        attrs: { name: \"category\" },\n                        on: {\n                          change: function($event) {\n                            var $$selectedVal = Array.prototype.filter\n                              .call($event.target.options, function(o) {\n                                return o.selected\n                              })\n                              .map(function(o) {\n                                var val = \"_value\" in o ? o._value : o.value\n                                return val\n                              })\n                            _vm.$set(\n                              _vm.event,\n                              \"category\",\n                              $event.target.multiple\n                                ? $$selectedVal\n                                : $$selectedVal[0]\n                            )\n                          }\n                        }\n                      },\n                      _vm._l(_vm.categories, function(option) {\n                        return _c(\n                          \"option\",\n                          {\n                            key: option.backgroundColor,\n                            domProps: { value: \"\" + option.value }\n                          },\n                          [_vm._v(_vm._s(option.name))]\n                        )\n                      }),\n                      0\n                    ),\n                    _vm.submitted && !_vm.$v.event.category.required\n                      ? _c(\"div\", { staticClass: \"invalid-feedback\" }, [\n                          _vm._v(\"This value is required.\")\n                        ])\n                      : _vm._e()\n                  ])\n                ])\n              ]),\n              _c(\n                \"div\",\n                { staticClass: \"text-right\" },\n                [\n                  _c(\n                    \"button\",\n                    {\n                      staticClass: \"btn btn-success\",\n                      attrs: { type: \"submit\" }\n                    },\n                    [_vm._v(\"Save\")]\n                  ),\n                  _c(\n                    \"b-button\",\n                    {\n                      staticClass: \"ml-1\",\n                      attrs: { variant: \"light\" },\n                      on: { click: _vm.hideModal }\n                    },\n                    [_vm._v(\"Close\")]\n                  )\n                ],\n                1\n              )\n            ]\n          )\n        ]\n      ),\n      _c(\n        \"b-modal\",\n        {\n          attrs: {\n            title: \"Edit Event\",\n            \"title-class\": \"text-black font-18\",\n            \"hide-footer\": \"\",\n            \"body-class\": \"p-0\"\n          },\n          model: {\n            value: _vm.eventModal,\n            callback: function($$v) {\n              _vm.eventModal = $$v\n            },\n            expression: \"eventModal\"\n          }\n        },\n        [\n          _c(\n            \"form\",\n            {\n              on: {\n                submit: function($event) {\n                  $event.preventDefault()\n                  return _vm.editSubmit($event)\n                }\n              }\n            },\n            [\n              _c(\"div\", { staticClass: \"p-3\" }, [\n                _c(\"label\", [_vm._v(\"Change event name\")]),\n                _c(\"div\", { staticClass: \"input-group m-b-15\" }, [\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.editevent.editTitle,\n                        expression: \"editevent.editTitle\"\n                      }\n                    ],\n                    staticClass: \"form-control\",\n                    attrs: { type: \"text\" },\n                    domProps: { value: _vm.editevent.editTitle },\n                    on: {\n                      input: function($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.$set(\n                          _vm.editevent,\n                          \"editTitle\",\n                          $event.target.value\n                        )\n                      }\n                    }\n                  }),\n                  _c(\"span\", { staticClass: \"input-group-append\" }, [\n                    _c(\n                      \"button\",\n                      {\n                        staticClass: \"btn btn-success btn-md\",\n                        attrs: { type: \"submit\" }\n                      },\n                      [\n                        _c(\"i\", { staticClass: \"fa fa-check\" }),\n                        _vm._v(\" Save\\n\\t\\t\\t\\t\\t\\t\")\n                      ]\n                    )\n                  ])\n                ])\n              ]),\n              _c(\n                \"div\",\n                { staticClass: \"text-right p-3\" },\n                [\n                  _c(\n                    \"b-button\",\n                    {\n                      attrs: { variant: \"light\" },\n                      on: { click: _vm.closeModal }\n                    },\n                    [_vm._v(\"Close\")]\n                  ),\n                  _c(\n                    \"b-button\",\n                    {\n                      staticClass: \"ml-1\",\n                      attrs: { variant: \"danger\" },\n                      on: { click: _vm.deleteEvent }\n                    },\n                    [_vm._v(\"Delete\")]\n                  )\n                ],\n                1\n              )\n            ]\n          )\n        ]\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}