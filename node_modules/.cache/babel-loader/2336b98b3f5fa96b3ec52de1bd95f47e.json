{"remainingRequest":"/home/murilo/code/murilo/sipet/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/home/murilo/code/murilo/sipet/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/murilo/code/murilo/sipet/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/murilo/code/murilo/sipet/src/sales/router/views/pages/ui/forms/wizard/step2.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/murilo/code/murilo/sipet/src/sales/router/views/pages/ui/forms/wizard/step2.vue","mtime":1584205434035},{"path":"/home/murilo/code/murilo/sipet/.babelrc","mtime":1587599733863},{"path":"/home/murilo/code/murilo/sipet/node_modules/cache-loader/dist/cjs.js","mtime":1583949852443},{"path":"/home/murilo/code/murilo/sipet/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":1583949836565},{"path":"/home/murilo/code/murilo/sipet/node_modules/cache-loader/dist/cjs.js","mtime":1583949852443},{"path":"/home/murilo/code/murilo/sipet/node_modules/vue-loader/lib/index.js","mtime":1583949852838}],"contextDependencies":[],"result":["import { required, minLength } from 'vuelidate/lib/validators';\nimport Multiselect from 'vue-multiselect';\nexport default {\n  components: {\n    Multiselect\n  },\n\n  data() {\n    return {\n      pet: {\n        name: '',\n        species: '',\n        breed: '',\n        gender: '',\n        birthdate: '',\n        weight: '',\n        color: '',\n        pedigree: true,\n        categories: []\n      },\n      genders: [{\n        value: '0',\n        label: 'Macho'\n      }, {\n        value: '1',\n        label: 'Fêmea'\n      }],\n      species: [{\n        value: '0',\n        label: 'Canino'\n      }, {\n        value: '1',\n        label: 'Felino'\n      }, {\n        value: '2',\n        label: 'Outros'\n      }],\n      pets: [],\n      breeds: [],\n      categories: [],\n      colors: [\"Chocolate\", \"Branco\", \"Preto\", \"Cinzento\", \"Dourado\", \"Creme\", \"Azul\", \"Vermelho\", \"Fulvo\", \"Castanho\", \"Amarelo\", \"Caramarelo\"]\n    };\n  },\n\n  validations: {\n    pet: {\n      name: {\n        required\n      },\n      species: {\n        required\n      },\n      breed: {\n        required\n      },\n      gender: {\n        required\n      },\n      birthdate: {\n        required,\n        minLength: minLength(10),\n        date: async value => {\n          if (value.length == 10) return moment(value, 'DD/MM/YYYY', true).isValid();\n          return true;\n        }\n      },\n      weight: {\n        required\n      },\n      color: {\n        required\n      },\n      categories: {\n        required,\n        minLength: minLength(3)\n      }\n    }\n  },\n\n  mounted() {\n    this.$api.get('pets_breeds').then(resp => this.breeds = resp.data);\n    this.$api.get('categories').then(resp => this.categories = resp.data);\n  },\n\n  computed: {\n    filtered_breeds() {\n      if (!this.pet.species) return [];\n      this.pet.breed = null;\n      return this.breeds[(this.pet.species.value == 0 ? 'dog' : 'cat') + '_breeds'];\n    }\n\n  },\n  methods: {\n    numberParaReal(value) {\n      let formated = \"R$ \" + (value / 100).toFixed(2).replace(\".\", \",\");\n      return formated;\n    },\n\n    addPet() {\n      this.pets.push(this.pet);\n      this.pet = {\n        name: '',\n        species: '',\n        breed: '',\n        gender: '',\n        birthdate: '',\n        weight: '',\n        color: '',\n        pedigree: '',\n        categories: []\n      };\n    },\n\n    deletePet(index) {\n      this.pets.splice(index, 1);\n    },\n\n    editPet(index) {\n      let pet = this.pets.splice(index, 1)[0];\n      this.pet = pet;\n    },\n\n    getCategoryName(category) {\n      return this.categories.filter(c => c.id == category)[0].name;\n    },\n\n    pet_specie(pet) {\n      return this.species.filter(specie => specie.value == pet.species.value)[0].label;\n    },\n\n    pet_gender(pet) {\n      return this.genders.filter(gender => gender.value == pet.gender.value)[0].label;\n    },\n\n    validate() {\n      this.$v.pet.$touch();\n      var isValid = !this.$v.pet.$invalid || this.$v.pet.$invalid && !!this.pets.length;\n      if (!this.$v.pet.$invalid) this.addPet();\n      this.$emit('on-validate', {\n        pets: this.pets\n      }, isValid);\n      return isValid;\n    }\n\n  }\n};",{"version":3,"sources":["step2.vue"],"names":[],"mappings":"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","sourcesContent":["<script>\nimport { required, minLength } from 'vuelidate/lib/validators'\n\nimport Multiselect from 'vue-multiselect'\n\nexport default {\n  components: {\n    Multiselect\n  },\n  data() {\n    return {\n      pet: {\n        name: '',\n        species: '',\n        breed: '',\n        gender: '',\n        birthdate: '',\n        weight: '',\n        color: '',\n        pedigree: true,\n        categories: [],\n      },\n      genders: [\n        {value: '0', label: 'Macho'},\n        {value: '1', label: 'Fêmea'},\n      ],\n      species: [\n        {value: '0', label: 'Canino'},\n        {value: '1', label: 'Felino'},\n        {value: '2', label: 'Outros'},\n      ],\n      pets: [],\n      breeds: [],\n      categories: [],\n      colors: [\"Chocolate\", \"Branco\", \"Preto\", \"Cinzento\", \"Dourado\", \"Creme\", \n        \"Azul\", \"Vermelho\", \"Fulvo\", \"Castanho\", \"Amarelo\", \"Caramarelo\"]\n    }\n  },\n  validations: {\n    pet: {\n      name: { required },\n      species: { required },\n      breed: { required },\n      gender: { required },\n      birthdate: { \n        required, \n        minLength: minLength(10),\n        date: async (value) => { \n          if (value.length == 10) return moment(value, 'DD/MM/YYYY', true).isValid()\n          return true\n        }\n     },\n      weight: { required },\n      color: { required },\n      categories: { required, minLength: minLength(3) },\n    }\n  }, \n  mounted() {\n    this.$api.get('pets_breeds').then(resp => this.breeds = resp.data )\n    this.$api.get('categories').then(resp => this.categories = resp.data )\n  },\n  computed: {\n    filtered_breeds() {\n      if (!this.pet.species) return []\n      this.pet.breed = null\n      return this.breeds[(this.pet.species.value == 0 ? 'dog' : 'cat') + '_breeds']\n    },\n  },\n  methods: {\n    numberParaReal(value){\n      let formated = \"R$ \" + (value/100).toFixed(2).replace(\".\",\",\");\n      return formated;\n    },\n    addPet() {\n      this.pets.push(this.pet)\n      this.pet = {\n        name: '',\n        species: '',\n        breed: '',\n        gender: '',\n        birthdate: '',\n        weight: '',\n        color: '',\n        pedigree: '',\n        categories: [],\n      }\n    },\n    deletePet(index) {\n      this.pets.splice(index, 1)\n    },\n    editPet(index) {\n      let pet = this.pets.splice(index, 1)[0]\n      this.pet = pet\n    },\n    getCategoryName(category) {\n      return this.categories.filter(c => c.id == category)[0].name\n    },\n    pet_specie(pet) {\n      return this.species.filter(specie => specie.value == pet.species.value)[0].label\n    },\n    pet_gender(pet) {\n      return this.genders.filter(gender => gender.value == pet.gender.value)[0].label\n    },\n    validate() {\n      this.$v.pet.$touch()\n      var isValid = !this.$v.pet.$invalid || (this.$v.pet.$invalid && !!this.pets.length)\n      if (!this.$v.pet.$invalid) this.addPet()\n      \n      this.$emit('on-validate', { pets: this.pets }, isValid)\n      return isValid\n    },\n  },\n}\n</script>\n\n<template>\n  <div>\n    <div class=\"row\">\n      <div class=\"col-12 col-md-6\">\n        <b-form-group label-for=\"name\" :class=\"{ 'has-error': $v.pet.name.$error }\">\n          <label> Nome <span class=\"text-danger\">*</span> </label>\n          <b-form-input id=\"petName\" v-model=\"pet.name\" \n            :class=\"{ 'is-invalid': $v.pet.name.$error }\">\n          </b-form-input>\n          <span v-if=\"$v.pet.name.$error && !$v.pet.name.required\"\n            class=\"help-block invalid-feedback\">\n            Este campo é obrigatório\n          </span>\n        </b-form-group>\n      </div>\n      <div class=\"col-12 col-md-6\">\n          <b-form-group label-for=\"species\" :class=\"{ 'has-error': $v.pet.species.$error }\">\n            <label> Espécie <span class=\"text-danger\">*</span> </label>\n            <multiselect track-by=\"label\" label=\"label\" v-model=\"pet.species\" \n              :class=\"{ 'is-invalid': $v.pet.species.$error }\" :options=\"species\"\n              selectLabel=\"\" placeholder=\"\" selectedLabel=\"Selecionado\" deselectLabel=\"Remover\">\n            </multiselect>\n            <div v-if=\"$v.pet.species.$error\" class=\"invalid-feedback\">\n              <span v-if=\"!$v.pet.species.required\">Este campo é obrigatório.</span>\n            </div>\n          </b-form-group>\n        </div>\n      <div class=\"col-12 col-md-6\">\n        <b-form-group label-for=\"breed\":class=\"{ 'has-error': $v.pet.breed.$error }\">\n          <label> Raça <span class=\"text-danger\">*</span> </label>\n          <multiselect v-model=\"pet.breed\" :options=\"filtered_breeds\"\n            :class=\"{ 'is-invalid': $v.pet.breed.$error }\"\n            selectLabel=\"\" placeholder=\"\" selectedLabel=\"Selecionado\" deselectLabel=\"Remover\">\n            <span slot=\"noOptions\">Selecione uma Espécie</span>\n          </multiselect>\n          <div v-if=\"$v.pet.breed.$error\" class=\"invalid-feedback\">\n            <span v-if=\"!$v.pet.breed.required\">\n              Esse campo é obrigatório.\n            </span>\n          </div>\n        </b-form-group>\n      </div>\n      <div class=\"col-12 col-md-6\">\n        <b-form-group label-for=\"genders\" :class=\"{ 'has-error': $v.pet.gender.$error }\">\n          <label> Gênero <span class=\"text-danger\">*</span> </label>\n          <multiselect track-by=\"label\" label=\"label\" v-model=\"pet.gender\" \n            :class=\"{ 'is-invalid': $v.pet.gender.$error }\"\n            selectLabel=\"\" placeholder=\"\" selectedLabel=\"Selecionado\" deselectLabel=\"Remover\"\n            :options=\"genders\"></multiselect>\n          <div v-if=\"$v.pet.gender.$error\" class=\"invalid-feedback\">\n            <span v-if=\"!$v.pet.gender.required\">\n              Esse campo é obrigatório.\n            </span>\n          </div>\n        </b-form-group>\n      </div>\n      <div class=\"col-6 col-md-3\">\n        <b-form-group label-for=\"birthdate\" :class=\"{ 'has-error': $v.pet.birthdate.$error }\">\n          <label> Nascimento <span class=\"text-danger\">*</span> </label>\n          <input class=\"form-control\" v-mask=\"'##/##/####'\" id=\"petBirthdate\" \n            type=\"tel\" v-model=\"pet.birthdate\" \n            :class=\"{ 'is-invalid': $v.pet.birthdate.$error }\">\n          </input>\n          <div v-if=\"$v.pet.birthdate.$error\" class=\"invalid-feedback\">\n            <span v-if=\"!$v.pet.birthdate.required || !$v.pet.birthdate.minLength\">Este campo é obrigatório. </span>\n            <span v-if=\"!$v.pet.birthdate.date\">Data inválida. </span>\n          </div>\n        </b-form-group>\n      </div>\n      <div class=\"col-6 col-md-3\">\n        <b-form-group label-for=\"weight\" :class=\"{ 'has-error': $v.pet.weight.$error }\">\n          <label> Peso <span class=\"text-danger\">*</span> </label>\n          <the-mask class=\"form-control\" :mask=\"['##.# Kg', '#.# Kg', '.# Kg']\" id=\"weight\" \n            type=\"tel\" v-model=\"pet.weight\" \n            :class=\"{ 'is-invalid': $v.pet.weight.$error }\">\n          </the-mask>\n          <span v-if=\"$v.pet.weight.$error && !$v.pet.weight.required\"\n            class=\"help-block invalid-feedback\">\n            Este campo é obrigatório\n          </span>\n        </b-form-group>\n      </div>\n      <div class=\"col-6 col-md-3\">\n        <b-form-group label-for=\"colors\" :class=\"{ 'has-error': $v.pet.color.$error }\">\n          <label> Cor <span class=\"text-danger\">*</span> </label>\n          <multiselect v-model=\"pet.color\" :options=\"colors\"\n            :class=\"{ 'is-invalid': $v.pet.color.$error }\"\n            selectLabel=\"\" placeholder=\"\" selectedLabel=\"Selecionado\" deselectLabel=\"Remover\">\n          </multiselect>\n          <div v-if=\"$v.pet.color.$error\" class=\"invalid-feedback\">\n            <span v-if=\"!$v.pet.color.required\">\n              Esse campo é obrigatório.\n            </span>\n          </div>\n        </b-form-group>\n      </div>\n      <div class=\"col-6 col-md-3\">\n        <b-form-group label-for=\"pedigree\">\n          <label> Possui Pedigree? </label>\n          <b-form-checkbox v-model=\"pet.pedigree\" name=\"check-button\" switch>\n            {{ pet.pedigree ? 'Sim' : 'Não'}}\n          </b-form-checkbox>\n        </b-form-group>\n      </div>\n      <div class=\"col-12\">\n        <b-form-group label-for=\"pedigree\">\n          <label> Monte seu plano escolhendo no mínimo 3 tipos de serviços</label>\n          <div class=\"row\">\n            <div class=\"col-2\" v-for=\"cat in categories\">\n              <b-form-group label-for=\"pedigree\" :class=\"{ 'is-invalid': $v.pet.categories.$error }\">\n                <b-form-checkbox v-model=\"pet.categories\" :value=\"cat.id\">{{ cat.name }}</b-form-checkbox>\n              </b-form-group>\n            </div>\n          </div>\n        </b-form-group>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-12\" align=\"center\">\n        <button @click.prevent=\"addPet()\" class=\"btn btn-success\" :disabled=\"$v.pet.$invalid\">\n          Adicionar outro pet\n        </button>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-12\" align=\"center\">\n        <div class=\"row\">\n          <div class=\"col-12 col-md-6 col-lg-3\" style=\"margin-top: 15px;\" v-for=\"(pet, index) in pets\">\n            <div class=\"card\" align=\"center\">\n              <div class=\"card-body pb-0\" style=\"border: 1px solid; border-color: #5369f8\">\n                <div class=\"text-center mt-3\">\n                  <img src=\"@assets/images/users/avatar-7.jpg\" alt\n                    class=\"avatar-xl rounded-circle\"/>\n                  <h5 class=\"mt-2 mb-0\">{{ pet.name }}</h5>\n                  <h6 class=\"text-muted font-weight-normal mt-2 mb-4\">\n                    <b-badge v-for=\"category in pet.categories\" variant=\"primary\" class=\"mr-1 mt-1\">{{ getCategoryName(category) }}</b-badge>\n                  </h6>\n\n                  <button @click.prevent=\"editPet(index)\" class=\"btn btn-primary btn-sm mr-1\">Editar</button>\n                  <button @click.prevent=\"deletePet(index)\" class=\"btn btn-white btn-sm\">Remover</button>\n\n                  <div class=\"pt-3 text-left\">\n                    <p class=\"text-muted mb-4\">\n                      {{pet.name}}, é um {{pet_specie(pet)}} da raça {{pet.breed}}, {{pet_gender(pet)}}, nascido em\n                      {{pet.birthdate}} pesando {{pet.weight}} kgs e de cor {{pet.color}}. {{pet.pedigree ? 'Possui Pedigree' : 'Não possui Pedigree'}}!\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n"],"sourceRoot":"src/sales/router/views/pages/ui/forms/wizard"}]}