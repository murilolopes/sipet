{"remainingRequest":"/home/murilo/code/murilo/sipet/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/home/murilo/code/murilo/sipet/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/murilo/code/murilo/sipet/src/router/routes.js","dependencies":[{"path":"/home/murilo/code/murilo/sipet/src/router/routes.js","mtime":1573759590000},{"path":"/home/murilo/code/murilo/sipet/.babelrc","mtime":1587599733863},{"path":"/home/murilo/code/murilo/sipet/node_modules/cache-loader/dist/cjs.js","mtime":1583949852443},{"path":"/home/murilo/code/murilo/sipet/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":1583949836565},{"path":"/home/murilo/code/murilo/sipet/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1583949846865}],"contextDependencies":[],"result":["import store from '@state/store'; // auth related routes\n\nconst authRoutes = [{\n  path: '/login',\n  name: 'login',\n  component: () => lazyLoadView(import('@views/pages/account/login')),\n  meta: {\n    beforeResolve(routeTo, routeFrom, next) {\n      // If the user is already logged in\n      if (store.getters['auth/loggedIn']) {\n        // Redirect to the home page instead\n        next({\n          name: 'dashboard'\n        });\n      } else {\n        // Continue to the login page\n        next();\n      }\n    }\n\n  }\n}, {\n  path: '/register',\n  name: 'register',\n  component: () => lazyLoadView(import('@views/pages/account/register')),\n  meta: {\n    beforeResolve(routeTo, routeFrom, next) {\n      // If the user is already logged in\n      if (store.getters['auth/loggedIn']) {\n        // Redirect to the home page instead\n        next({\n          name: 'dashboard'\n        });\n      } else {\n        // Continue to the login page\n        next();\n      }\n    }\n\n  }\n}, {\n  path: '/confirm-account',\n  name: 'confirm-account',\n  component: () => lazyLoadView(import('@views/pages/account/confirm')),\n  meta: {\n    beforeResolve(routeTo, routeFrom, next) {\n      // If the user is already logged in\n      if (store.getters['auth/loggedIn']) {\n        // Redirect to the home page instead\n        next({\n          name: 'dashboard'\n        });\n      } else {\n        // Continue to the login page\n        next();\n      }\n    }\n\n  }\n}, {\n  path: '/forget-password',\n  name: 'forget-password',\n  component: () => lazyLoadView(import('@views/pages/account/forgetPassword')),\n  meta: {\n    beforeResolve(routeTo, routeFrom, next) {\n      // If the user is already logged in\n      if (store.getters['auth/loggedIn']) {\n        // Redirect to the home page instead\n        next({\n          name: 'dashboard'\n        });\n      } else {\n        // Continue to the login page\n        next();\n      }\n    }\n\n  }\n}, {\n  path: '/logout',\n  name: 'logout',\n  meta: {\n    authRequired: true,\n\n    beforeResolve(routeTo, routeFrom, next) {\n      store.dispatch('auth/logOut');\n      const authRequiredOnPreviousRoute = routeFrom.matched.some(route => route.meta.authRequired); // Navigate back to previous page, or home as a fallback\n\n      next(authRequiredOnPreviousRoute ? {\n        name: 'dashboard'\n      } : { ...routeFrom\n      });\n    }\n\n  }\n}]; // error pages\n\nconst errorPagesRoutes = [{\n  path: '/404',\n  name: '404',\n  component: require('@views/pages/secondary/error-404').default,\n  // Allows props to be passed to the 404 page through route\n  // params, such as `resource` to define what wasn't found.\n  props: true\n}, {\n  path: '/500',\n  name: '500',\n  component: require('@views/pages/secondary/error-500').default,\n  props: true\n}, // Redirect any unmatched routes to the 404 page. This may\n// require some server configuration to work in production:\n// https://router.vuejs.org/en/essentials/history-mode.html#example-server-configurations\n{\n  path: '*',\n  redirect: '404'\n}]; // dashboard\n\nconst dashboardRoutes = [{\n  path: '/',\n  name: 'Dashboard',\n  header: 'Navigation',\n  icon: 'home',\n  badge: {\n    text: '1',\n    varient: 'success'\n  },\n  component: () => lazyLoadView(import('@views/pages/dashboard/dashboard')),\n  meta: {\n    authRequired: true\n  },\n  props: route => ({\n    user: store.state.auth.currentUser || {}\n  })\n}]; // apps\n\nconst calendarAppsRoutes = [{\n  path: '/apps/calendar',\n  name: 'Calendar',\n  header: 'Apps',\n  icon: 'calendar',\n  component: () => lazyLoadView(import('@views/pages/apps/calendar')),\n  meta: {\n    authRequired: true\n  },\n  props: route => ({\n    user: store.state.auth.currentUser || {}\n  })\n}];\nconst emailAppsRoutes = [{\n  path: '/apps/email',\n  name: 'Email',\n  icon: 'inbox',\n  meta: {\n    authRequired: true\n  },\n  // create a container component\n  component: {\n    render(c) {\n      return c('router-view');\n    }\n\n  },\n  props: route => ({\n    user: store.state.auth.currentUser || {}\n  }),\n  children: [{\n    name: 'Inbox',\n    path: 'inbox',\n    meta: {\n      authRequired: true\n    },\n    component: () => lazyLoadView(import('@views/pages/apps/email/inbox'))\n  }, {\n    path: 'read',\n    name: 'Read Email',\n    meta: {\n      authRequired: true\n    },\n    component: () => lazyLoadView(import('@views/pages/apps/email/reademail'))\n  }, {\n    path: 'compose',\n    name: 'Compose Email',\n    meta: {\n      authRequired: true\n    },\n    component: () => lazyLoadView(import('@views/pages/apps/email/emailcompose'))\n  }]\n}];\nconst projectAppsRoutes = [{\n  path: '/apps/project',\n  name: 'Project',\n  icon: 'briefcase',\n  meta: {\n    authRequired: true\n  },\n  // create a container component\n  component: {\n    render(c) {\n      return c('router-view');\n    }\n\n  },\n  props: route => ({\n    user: store.state.auth.currentUser || {}\n  }),\n  children: [{\n    path: 'list',\n    name: 'List',\n    meta: {\n      authRequired: true\n    },\n    component: () => lazyLoadView(import('@views/pages/apps/project/list'))\n  }, {\n    path: 'detail',\n    name: 'Detail',\n    meta: {\n      authRequired: true\n    },\n    component: () => lazyLoadView(import('@views/pages/apps/project/detail'))\n  }]\n}];\nconst taskAppsRoutes = [{\n  path: '/apps/task',\n  name: 'Task',\n  icon: 'bookmark',\n  meta: {\n    authRequired: true\n  },\n  // create a container component\n  component: {\n    render(c) {\n      return c('router-view');\n    }\n\n  },\n  props: route => ({\n    user: store.state.auth.currentUser || {}\n  }),\n  children: [{\n    path: 'list',\n    name: 'Task List',\n    meta: {\n      authRequired: true\n    },\n    component: () => lazyLoadView(import('@views/pages/apps/tasks/task-list'))\n  }, {\n    path: 'task-board',\n    name: 'Kanban Board',\n    meta: {\n      authRequired: true\n    },\n    component: () => lazyLoadView(import('@views/pages/apps/tasks/task-board'))\n  }]\n}];\nconst appsRoutes = [...calendarAppsRoutes, ...emailAppsRoutes, ...projectAppsRoutes, ...taskAppsRoutes]; // pages\n\nconst pagesRoutes = [{\n  path: '/pages',\n  name: 'Pages',\n  icon: 'file-text',\n  header: 'Custom',\n  meta: {\n    authRequired: true\n  },\n  // create a container component\n  component: {\n    render(c) {\n      return c('router-view');\n    }\n\n  },\n  children: [{\n    path: 'starter',\n    name: 'Starter',\n    component: () => lazyLoadView(import('@views/pages/secondary/starter'))\n  }, {\n    path: 'invoice',\n    name: 'Invoice',\n    component: () => lazyLoadView(import('@views/pages/secondary/invoice'))\n  }, {\n    path: 'profile',\n    name: 'Profile',\n    component: () => lazyLoadView(import('@views/pages/secondary/profile/'))\n  }, {\n    path: 'activity',\n    name: 'Activity',\n    component: () => lazyLoadView(import('@views/pages/secondary/activity'))\n  }, {\n    path: 'pricing',\n    name: 'Pricing',\n    component: () => lazyLoadView(import('@views/pages/secondary/pricing'))\n  }]\n}]; // ui\n\nconst uiRoutes = [{\n  path: '/ui',\n  name: 'UI Elements',\n  icon: 'package',\n  header: 'Components',\n  meta: {\n    authRequired: true\n  },\n  // create a container component\n  component: {\n    render(c) {\n      return c('router-view');\n    }\n\n  },\n  children: [{\n    path: 'bootstrap',\n    name: 'Bootstrap UI',\n    component: () => lazyLoadView(import('@views/pages/ui/bootstrap/'))\n  }, {\n    path: 'icons',\n    name: 'Icons',\n    // create a container component\n    component: {\n      render(c) {\n        return c('router-view');\n      }\n\n    },\n    children: [{\n      path: 'feather',\n      name: 'Feather',\n      component: () => lazyLoadView(import('@views/pages/ui/icons/feather'))\n    }, {\n      path: 'unicons',\n      name: 'Unicons',\n      component: () => lazyLoadView(import('@views/pages/ui/icons/unicons'))\n    }]\n  }, {\n    path: 'widgets',\n    name: 'Widgets',\n    component: () => lazyLoadView(import('@views/pages/ui/widget/'))\n  }]\n}]; // forms\n\nconst formsRoutes = [{\n  path: '/forms',\n  name: 'Forms',\n  icon: 'file-text',\n  meta: {\n    authRequired: true\n  },\n  // create a container component\n  component: {\n    render(c) {\n      return c('router-view');\n    }\n\n  },\n  children: [{\n    path: 'basic',\n    name: 'Basic',\n    component: () => lazyLoadView(import('@views/pages/ui/forms/basic'))\n  }, {\n    path: 'advanced',\n    name: 'Advanced',\n    component: () => lazyLoadView(import('@views/pages/ui/forms/advanced'))\n  }, {\n    path: 'validation',\n    name: 'Validation',\n    component: () => lazyLoadView(import('@views/pages/ui/forms/validation'))\n  }, {\n    path: 'wizard',\n    name: 'Wizard',\n    component: () => lazyLoadView(import('@views/pages/ui/forms/wizard/'))\n  }, {\n    path: 'editor',\n    name: 'Editor',\n    component: () => lazyLoadView(import('@views/pages/ui/forms/editor'))\n  }, {\n    path: 'uploads',\n    name: 'File Uploads',\n    component: () => lazyLoadView(import('@views/pages/ui/forms/uploads'))\n  }]\n}]; // tables\n\nconst tablesRoutes = [{\n  path: '/tables',\n  name: 'Tables',\n  icon: 'grid',\n  meta: {\n    authRequired: true\n  },\n  // create a container component\n  component: {\n    render(c) {\n      return c('router-view');\n    }\n\n  },\n  children: [{\n    path: 'basic',\n    name: 'Basic Tables',\n    component: () => lazyLoadView(import('@views/pages/ui/tables/basic-table'))\n  }, {\n    path: 'advanced',\n    name: 'Advanced Tables',\n    component: () => lazyLoadView(import('@views/pages/ui/tables/advanced-table'))\n  }]\n}]; // charts\n\nconst chartsRoutes = [{\n  path: '/charts',\n  name: 'Charts',\n  icon: 'pie-chart',\n  component: () => lazyLoadView(import('@views/pages/ui/chart/')),\n  meta: {\n    authRequired: true\n  },\n  props: route => ({\n    user: store.state.auth.currentUser || {}\n  })\n}];\nconst authProtectedRoutes = [...dashboardRoutes, ...appsRoutes, ...pagesRoutes, ...uiRoutes, ...formsRoutes, ...chartsRoutes, ...tablesRoutes];\nconst allRoutes = [...authRoutes, ...authProtectedRoutes, ...errorPagesRoutes];\nexport { allRoutes, authProtectedRoutes }; // Lazy-loads view components, but with better UX. A loading view\n// will be used if the component takes a while to load, falling\n// back to a timeout view in case the page fails to load. You can\n// use this component to lazy-load a route with:\n//\n// component: () => lazyLoadView(import('@views/my-view'))\n//\n// NOTE: Components loaded with this strategy DO NOT have access\n// to in-component guards, such as beforeRouteEnter,\n// beforeRouteUpdate, and beforeRouteLeave. You must either use\n// route-level guards instead or lazy-load the component directly:\n//\n// component: () => import('@views/my-view')\n//\n\nfunction lazyLoadView(AsyncView) {\n  const AsyncHandler = () => ({\n    component: AsyncView,\n    // A component to use while the component is loading.\n    loading: require('@components/_loading').default,\n    // Delay before showing the loading component.\n    // Default: 200 (milliseconds).\n    delay: 400,\n    // A fallback component in case the timeout is exceeded\n    // when loading the component.\n    // error: require('@views/_timeout').default,\n    // Time before giving up trying to load the component.\n    // Default: Infinity (milliseconds).\n    timeout: 10000\n  });\n\n  return Promise.resolve({\n    functional: true,\n\n    render(h, {\n      data,\n      children\n    }) {\n      // Transparently pass any props or children\n      // to the view component.\n      return h(AsyncHandler, data, children);\n    }\n\n  });\n}",{"version":3,"sources":["/home/murilo/code/murilo/sipet/src/router/routes.js"],"names":["store","authRoutes","path","name","component","lazyLoadView","meta","beforeResolve","routeTo","routeFrom","next","getters","authRequired","dispatch","authRequiredOnPreviousRoute","matched","some","route","errorPagesRoutes","require","default","props","redirect","dashboardRoutes","header","icon","badge","text","varient","user","state","auth","currentUser","calendarAppsRoutes","emailAppsRoutes","render","c","children","projectAppsRoutes","taskAppsRoutes","appsRoutes","pagesRoutes","uiRoutes","formsRoutes","tablesRoutes","chartsRoutes","authProtectedRoutes","allRoutes","AsyncView","AsyncHandler","loading","delay","timeout","Promise","resolve","functional","h","data"],"mappings":"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","sourcesContent":["import store from '@state/store'\n\n// auth related routes\nconst authRoutes = [\n  {\n    path: '/login',\n    name: 'login',\n    component: () => lazyLoadView(import('@views/pages/account/login')),\n    meta: {\n      beforeResolve(routeTo, routeFrom, next) {\n        // If the user is already logged in\n        if (store.getters['auth/loggedIn']) {\n          // Redirect to the home page instead\n          next({ name: 'dashboard' })\n        } else {\n          // Continue to the login page\n          next()\n        }\n      },\n    },\n  },\n  {\n    path: '/register',\n    name: 'register',\n    component: () => lazyLoadView(import('@views/pages/account/register')),\n    meta: {\n      beforeResolve(routeTo, routeFrom, next) {\n        // If the user is already logged in\n        if (store.getters['auth/loggedIn']) {\n          // Redirect to the home page instead\n          next({ name: 'dashboard' })\n        } else {\n          // Continue to the login page\n          next()\n        }\n      },\n    },\n  },\n  {\n    path: '/confirm-account',\n    name: 'confirm-account',\n    component: () => lazyLoadView(import('@views/pages/account/confirm')),\n    meta: {\n      beforeResolve(routeTo, routeFrom, next) {\n        // If the user is already logged in\n        if (store.getters['auth/loggedIn']) {\n          // Redirect to the home page instead\n          next({ name: 'dashboard' })\n        } else {\n          // Continue to the login page\n          next()\n        }\n      },\n    },\n  },\n  {\n    path: '/forget-password',\n    name: 'forget-password',\n    component: () =>\n      lazyLoadView(import('@views/pages/account/forgetPassword')),\n    meta: {\n      beforeResolve(routeTo, routeFrom, next) {\n        // If the user is already logged in\n        if (store.getters['auth/loggedIn']) {\n          // Redirect to the home page instead\n          next({ name: 'dashboard' })\n        } else {\n          // Continue to the login page\n          next()\n        }\n      },\n    },\n  },\n  {\n    path: '/logout',\n    name: 'logout',\n    meta: {\n      authRequired: true,\n      beforeResolve(routeTo, routeFrom, next) {\n        store.dispatch('auth/logOut')\n        const authRequiredOnPreviousRoute = routeFrom.matched.some(\n          (route) => route.meta.authRequired\n        )\n        // Navigate back to previous page, or home as a fallback\n        next(\n          authRequiredOnPreviousRoute ? { name: 'dashboard' } : { ...routeFrom }\n        )\n      },\n    },\n  },\n]\n\n// error pages\nconst errorPagesRoutes = [\n  {\n    path: '/404',\n    name: '404',\n    component: require('@views/pages/secondary/error-404').default,\n    // Allows props to be passed to the 404 page through route\n    // params, such as `resource` to define what wasn't found.\n    props: true,\n  },\n  {\n    path: '/500',\n    name: '500',\n    component: require('@views/pages/secondary/error-500').default,\n    props: true,\n  },\n  // Redirect any unmatched routes to the 404 page. This may\n  // require some server configuration to work in production:\n  // https://router.vuejs.org/en/essentials/history-mode.html#example-server-configurations\n  {\n    path: '*',\n    redirect: '404',\n  },\n]\n\n// dashboard\nconst dashboardRoutes = [\n  {\n    path: '/',\n    name: 'Dashboard',\n    header: 'Navigation',\n    icon: 'home',\n    badge: {\n      text: '1',\n      varient: 'success',\n    },\n    component: () => lazyLoadView(import('@views/pages/dashboard/dashboard')),\n    meta: { authRequired: true },\n    props: (route) => ({ user: store.state.auth.currentUser || {} }),\n  },\n]\n\n// apps\nconst calendarAppsRoutes = [\n  {\n    path: '/apps/calendar',\n    name: 'Calendar',\n    header: 'Apps',\n    icon: 'calendar',\n    component: () => lazyLoadView(import('@views/pages/apps/calendar')),\n    meta: { authRequired: true },\n    props: (route) => ({ user: store.state.auth.currentUser || {} }),\n  }\n];\n\nconst emailAppsRoutes = [\n  {\n    path: '/apps/email',\n    name: 'Email',\n    icon: 'inbox',\n    meta: { authRequired: true },\n    // create a container component\n    component: {\n      render(c) {\n        return c('router-view')\n      },\n    },\n    props: (route) => ({ user: store.state.auth.currentUser || {} }),\n    children: [\n      {\n        name: 'Inbox',\n        path: 'inbox',\n        meta: { authRequired: true },\n        component: () =>\n          lazyLoadView(import('@views/pages/apps/email/inbox')),\n      },\n      {\n        path: 'read',\n        name: 'Read Email',\n        meta: { authRequired: true },\n        component: () =>\n          lazyLoadView(import('@views/pages/apps/email/reademail')),\n      },\n      {\n        path: 'compose',\n        name: 'Compose Email',\n        meta: { authRequired: true },\n        component: () =>\n          lazyLoadView(import('@views/pages/apps/email/emailcompose')),\n      },\n    ],\n  }\n];\n\nconst projectAppsRoutes = [\n  {\n    path: '/apps/project',\n    name: 'Project',\n    icon: 'briefcase',\n    meta: { authRequired: true },\n    // create a container component\n    component: {\n      render(c) {\n        return c('router-view')\n      },\n    },\n    props: (route) => ({ user: store.state.auth.currentUser || {} }),\n    children: [\n      {\n        path: 'list',\n        name: 'List',\n        meta: { authRequired: true },\n        component: () =>\n          lazyLoadView(import('@views/pages/apps/project/list')),\n      },\n      {\n        path: 'detail',\n        name: 'Detail',\n        meta: { authRequired: true },\n        component: () =>\n          lazyLoadView(import('@views/pages/apps/project/detail')),\n      },\n    ],\n  }\n];\n\nconst taskAppsRoutes = [\n  {\n    path: '/apps/task',\n    name: 'Task',\n    icon: 'bookmark',\n    meta: { authRequired: true },\n    // create a container component\n    component: {\n      render(c) {\n        return c('router-view')\n      },\n    },\n    props: (route) => ({ user: store.state.auth.currentUser || {} }),\n    children: [\n      {\n        path: 'list',\n        name: 'Task List',\n        meta: { authRequired: true },\n        component: () =>\n          lazyLoadView(import('@views/pages/apps/tasks/task-list')),\n      },\n      {\n        path: 'task-board',\n        name: 'Kanban Board',\n        meta: { authRequired: true },\n        component: () =>\n          lazyLoadView(import('@views/pages/apps/tasks/task-board')),\n      },\n    ],\n  }\n];\n\nconst appsRoutes = [\n  ...calendarAppsRoutes,\n  ...emailAppsRoutes,\n  ...projectAppsRoutes,\n  ...taskAppsRoutes\n]\n\n// pages\nconst pagesRoutes = [\n  {\n    path: '/pages',\n    name: 'Pages',\n    icon: 'file-text',\n    header: 'Custom',\n    meta: { authRequired: true },\n    // create a container component\n    component: {\n      render(c) {\n        return c('router-view')\n      },\n    },\n    children: [\n      {\n        path: 'starter',\n        name: 'Starter',\n        component: () => lazyLoadView(import('@views/pages/secondary/starter')),\n      },\n      {\n        path: 'invoice',\n        name: 'Invoice',\n        component: () => lazyLoadView(import('@views/pages/secondary/invoice')),\n      },\n      {\n        path: 'profile',\n        name: 'Profile',\n        component: () => lazyLoadView(import('@views/pages/secondary/profile/')),\n      },\n      {\n        path: 'activity',\n        name: 'Activity',\n        component: () =>\n          lazyLoadView(import('@views/pages/secondary/activity')),\n      },\n      {\n        path: 'pricing',\n        name: 'Pricing',\n        component: () => lazyLoadView(import('@views/pages/secondary/pricing')),\n      },\n    ],\n  },\n]\n\n// ui\nconst uiRoutes = [\n  {\n    path: '/ui',\n    name: 'UI Elements',\n    icon: 'package',\n    header: 'Components',\n    meta: { authRequired: true },\n    // create a container component\n    component: {\n      render(c) {\n        return c('router-view')\n      },\n    },\n    children: [\n      {\n        path: 'bootstrap',\n        name: 'Bootstrap UI',\n        component: () => lazyLoadView(import('@views/pages/ui/bootstrap/')),\n      },\n      {\n        path: 'icons',\n        name: 'Icons',\n        // create a container component\n        component: {\n          render(c) {\n            return c('router-view')\n          },\n        },\n        children: [\n          {\n            path: 'feather',\n            name: 'Feather',\n            component: () =>\n              lazyLoadView(import('@views/pages/ui/icons/feather')),\n          },\n          {\n            path: 'unicons',\n            name: 'Unicons',\n            component: () =>\n              lazyLoadView(import('@views/pages/ui/icons/unicons')),\n          },\n        ],\n      },\n      {\n        path: 'widgets',\n        name: 'Widgets',\n        component: () => lazyLoadView(import('@views/pages/ui/widget/')),\n      },\n    ],\n  },\n]\n\n// forms\nconst formsRoutes = [\n  {\n    path: '/forms',\n    name: 'Forms',\n    icon: 'file-text',\n    meta: { authRequired: true },\n    // create a container component\n    component: {\n      render(c) {\n        return c('router-view')\n      },\n    },\n    children: [\n      {\n        path: 'basic',\n        name: 'Basic',\n        component: () => lazyLoadView(import('@views/pages/ui/forms/basic')),\n      },\n      {\n        path: 'advanced',\n        name: 'Advanced',\n        component: () => lazyLoadView(import('@views/pages/ui/forms/advanced')),\n      },\n      {\n        path: 'validation',\n        name: 'Validation',\n        component: () =>\n          lazyLoadView(import('@views/pages/ui/forms/validation')),\n      },\n      {\n        path: 'wizard',\n        name: 'Wizard',\n        component: () => lazyLoadView(import('@views/pages/ui/forms/wizard/')),\n      },\n      {\n        path: 'editor',\n        name: 'Editor',\n        component: () => lazyLoadView(import('@views/pages/ui/forms/editor')),\n      },\n      {\n        path: 'uploads',\n        name: 'File Uploads',\n        component: () => lazyLoadView(import('@views/pages/ui/forms/uploads')),\n      },\n    ],\n  },\n]\n\n// tables\nconst tablesRoutes = [\n  {\n    path: '/tables',\n    name: 'Tables',\n    icon: 'grid',\n    meta: { authRequired: true },\n    // create a container component\n    component: {\n      render(c) {\n        return c('router-view')\n      },\n    },\n    children: [\n      {\n        path: 'basic',\n        name: 'Basic Tables',\n        component: () =>\n          lazyLoadView(import('@views/pages/ui/tables/basic-table')),\n      },\n      {\n        path: 'advanced',\n        name: 'Advanced Tables',\n        component: () =>\n          lazyLoadView(import('@views/pages/ui/tables/advanced-table')),\n      },\n    ],\n  },\n]\n\n// charts\nconst chartsRoutes = [\n  {\n    path: '/charts',\n    name: 'Charts',\n    icon: 'pie-chart',\n    component: () => lazyLoadView(import('@views/pages/ui/chart/')),\n    meta: { authRequired: true },\n    props: (route) => ({ user: store.state.auth.currentUser || {} }),\n  },\n]\n\n\nconst authProtectedRoutes = [\n  ...dashboardRoutes,\n  ...appsRoutes,\n  ...pagesRoutes,\n  ...uiRoutes,\n  ...formsRoutes,\n  ...chartsRoutes,\n  ...tablesRoutes\n]\nconst allRoutes = [...authRoutes, ...authProtectedRoutes, ...errorPagesRoutes]\n\nexport { allRoutes, authProtectedRoutes }\n\n// Lazy-loads view components, but with better UX. A loading view\n// will be used if the component takes a while to load, falling\n// back to a timeout view in case the page fails to load. You can\n// use this component to lazy-load a route with:\n//\n// component: () => lazyLoadView(import('@views/my-view'))\n//\n// NOTE: Components loaded with this strategy DO NOT have access\n// to in-component guards, such as beforeRouteEnter,\n// beforeRouteUpdate, and beforeRouteLeave. You must either use\n// route-level guards instead or lazy-load the component directly:\n//\n// component: () => import('@views/my-view')\n//\nfunction lazyLoadView(AsyncView) {\n  const AsyncHandler = () => ({\n    component: AsyncView,\n    // A component to use while the component is loading.\n    loading: require('@components/_loading').default,\n    // Delay before showing the loading component.\n    // Default: 200 (milliseconds).\n    delay: 400,\n    // A fallback component in case the timeout is exceeded\n    // when loading the component.\n    // error: require('@views/_timeout').default,\n    // Time before giving up trying to load the component.\n    // Default: Infinity (milliseconds).\n    timeout: 10000,\n  })\n\n  return Promise.resolve({\n    functional: true,\n    render(h, { data, children }) {\n      // Transparently pass any props or children\n      // to the view component.\n      return h(AsyncHandler, data, children)\n    },\n  })\n}\n"]}]}